: 정리 :
▶ 1. 테이블 관리 : CREATE TABLE(생성), DROP TABLE(삭제), ALTER TABLE(수정)
테이블(릴레이션), 열(컬럼), 행(튜플)
타입 : INT NUMBER VARCHAR2 TIMESTAMP DATE
제약조건 : 유일성(기본키(PK), UNIQUE), NOT NULL, CHECK, DEFAULT
키 :	기본키(PRIMARY KEY) : 유일성, NOT NULL, 인덱스 형성(검색속도 향상(WHERE절))
	외래키(FOREIGN KEY) : 컬럼 투 컬럼, 자식 릴레이션 컬럼이 부모 릴레이션 컬럼을 참조
			외래키 제약 조건 : CASCADE, SET NULL
ERD : 개체와 개체 간의 관계 분석, 관계(1:1 1:N N:M)분석 후 테이블 형성
▶ 2. 테이블 내 튜플 조작
CRUD (C:생성 R:조회 U:갱신 D:삭제)
생성 : INSERT
조회 : SELECT
갱신 : UPDATE
삭제 : DELETE
== 특정 튜플 선택 후 갱신/삭제 시 WHERE절 사용
쿼리문 실행 순서
4 : SELECT절 : 컬럼 선택
1 : FROM절 : 대상 테이블 지정
2 : WHERE절 : 대상 테이블 내 튜플을 선정할 조건
3 : GROUP BY절 : 그룹화
5 : ORDER BY절 : 출력 시 정렬 조건 (내림차순:DESC / 오름차순:ASC)
▶ 3. 함수
함수를 호출하고 함수의 기능을 실행하여 결과값을 리턴받아 처리한다.
예시 ) COUNT(*) 함수 호출 시 튜플의 수를 카운팅하여 카운팅한 결과값을 리턴한다.



`
Q1. 점수가 50미만인 회원 수
A1. 이름이 hm인 릴레이션에서 컬럼 point의 튜플의 값이 50미만이라는 제약조건에 맞는 회원의 튜플 수를 출력한다.
Q2. 점수가 50미만인 회원을 모두 출력, 점수가 높은 순서대로
A2. 이름이 hm인 릴레이션에서 컬럼 point의 튜플의 값이 50미만이라는 제약조건에 맞는 회원들을 모두 출력하는데, point 튜플의 값이 높은 순서대로 정렬하여 출력한다.
`


SELECT : 화면에 출력할 컬럼
> COUNT(*) : 튜플의 수 집계
FROM : 대상 테이블
WHERE : 튜플 선정 조건
ORDER BY : 정렬 조건 : 내림차순(DESC) 오름차순(ASC)

쿼리문 실행 순서 : FROM → WHERE → SELECT → ORDER BY

테이블 관련 쿼리문
생성 : CREATE TABLE
삭제 : DROP TABLE
수정 : ALTER TABLE
