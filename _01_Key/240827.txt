DB : 데이터베이스
- 자료를 영구적으로 저장하는 공간
- 정형/비정형 데이터베이스로 나뉜다.

관계형 데이터베이스 (RDB)
- 정형 데이터베이스
- 무결성에 위배되지 않도록 만든다.
- 도구 : Oracle Maria MySQL msSQL 등
- 테이블의 형태 : 행(row)과 열(column)로 구성된다.
> 행은 튜플(Tuple), 열은 속성(Attribute)

- 행(row)
CRUD : 생성(Create) 조회(Read) 갱신(Update) 삭제(Delete)
C = row INSERT
R = row SELECT
U = row UPDATE
D = row DELETE
: 쿼리문
C : INSERT INTO [테이블명] VALUES ([각 컬럼에 맞는 로우 값])
R : SELECT [컬럼명] FROM [테이블명] WHERE [조건]
U : UPDATE [테이블명] SET [바꿀 값] WHERE [조건]
D : DELETE FROM [테이블명] WHERE [조건]
- 열(column)
속성
제약조건

- 키(Keys) : 열(column)에 부여하는 기능
기본키(Primary Key) : PRIMARY KEY
> 튜플을 유일하게 식별(유일성), 기본키로 색인(index)을 형성하여 저장한다. (=조회(Read) 시 검색 속도를 향상하기 위해)
> 색인(index)가 많아질수록 검색 속도가 느려진다.
> NULL 사용이 불가능하다. (NOT NULL 포함)
> 기본키가 존재하지 않는다면, 갱신(Update) 및 삭제(Delete)에 대한 이상 현상이 일어날 수 있다. (=튜플을 유일하게 식별하지 못하기 때문이다.)
외래키(Foreign Key) : FOREIGN KEY
> 데이터의 중복을 최소화하기 위해 테이블을 분리하여 만들고(정규화), 기본키를 참조하여 외래키를 생성한다.
> 부모-자식 관계의 릴레이션
> 자식 릴레이션의 외래키로 존재하는 컬럼이 부모 릴레이션의 특정 컬럼을 참조한다.
= 이상 현상 방지를 위해 유일성과 데이터의 중복을 최소화 시켜야 한다.


`
외래키 설정 쿼리문
1. 테이블과 같이 생성
CONSTRAINT [FK명] FOREIGN KEY([FK로 지정할 컬럼명]) REFERENCES [FK로 연결할 부모 테이블]([부모 테이블의 PK 컬럼명])
2. 테이블 생성 후 외래키 지정
ALTER TABLE [테이블명]
ADD CONSTRAINT [FK명] FOREIGN KEY([FK로 지정할 컬럼명]) REFERENCES [FK로 연결할 부모 테이블]([부모 테이블의 PK 컬럼명])
3. 외래키 삭제
ALTER TABLE [테이블명] DROP CONSTRAINT [FK명]
`
