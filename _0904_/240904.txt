FUNCTION
함수는 특정 기능을 제공한다.
함수는 직접 만들어서 사용할 수도 있고, 누군가 만들어둔 것을 사용할 수도 있다(내장함수)
call : 함수를 불러온다. call 시 매개변수 값을 넘겨줄 수 있다.
return : 매개변수 값을 함수에서 처리하고, 처리한 결과값을 반환한다.

GROUP BY
- 튜플이 선택된 다음에 사용이 가능하다.
- 그룹별 통계를 내야할 때 사용한다.

SubQuery
- 하나의 쿼리 내에 포함된 또 다른 SELECT문을 의미한다.
- 메인쿼리 안에 소괄호를 사용하여 시작하는 SELECT문이다.
- 서브쿼리의 결과값을 메인쿼리에 활용할 때 사용한다.
	> 원하는 컬럼에서 활용이 가능하다. (SELECT절)		: 스칼라 서브쿼리
	> 테이블로 활용이 가능하다. (FROM절)			: 인라인뷰 서브쿼리
	> 조건으로 사용이 가능하다 (WHERE절, HAVING절)


쿼리문의 실행 순서
4번 : SELECT절
1번 : FROM절
2번 : WHERE절
3번 : GROUP BY절
5번 : ORDER BY절

예시) 
테이블명 : 테스트테이블
컬럼 : 번호 이름 점수 학년
튜플 : (1,'김테스트',100,1) (2,'박테스트',80,2) (3,'이테스트',50,2) (4,'최테스트',20,1)
▶ 문제
점수가 60점이 초과되는 사람의 이름,점수,학년을 출력하시오.
▶ 쿼리문
SELECT 이름,점수,학년
FROM 테스트테이블
WHERE 점수>60
▶ 실행
1번 FROM절 실행 : 테스트테이블의 정보를 불러온다.
> 번호 이름 점수 학년 ... 순서로
> (1,'김테스트',100,1) (2,'박테스트',80,2) (3,'이테스트',50,2) (4,'최테스트',20,1) ... 튜플을 가져온다.
2번 WHERE절 실행 : 점수가 60점초과인 튜플을 가져온다.
> (1,'김테스트',100,1) (2,'박테스트',80,2) ... 해당 조건에 걸러진 튜플들이 선택된다.
3번 SELECT절 실행 : 이름 점수 학년 컬럼에 해당되는 튜플들이 선택된다.
> ('김테스트',100,1) ('박테스트',80,2)
▷ 결과 : 출력한다.
　이름		점수	학년
　김테스트	100	1
　박테스트	80	2

▶ 문제
각 학년의 평균 점수를 출력하시오.
▶ 쿼리문
SELECT 학년, AVG(점수)
FROM 테스트테이블
GROUP BY 학년
ORDER BY 학년 ASC
▶ 실행
1번 FROM절 실행 : 테스트테이블의 정보를 불러온다.
> 번호 이름 점수 학년 ... 순서로
> (1,'김테스트',100,1) (2,'박테스트',80,2) (3,'이테스트',50,2) (4,'최테스트',20,1) ... 튜플을 가져온다.
2번 GROUP BY절 실행 : 집계(그룹함수)를 하기 위해 학년을 기준으로 컬럼을 지정한다.
> 학년 1 : (1,'김테스트',100,1) (4,'최테스트',20,1)
> 학년 2 : (2,'박테스트',80,2) (3,'이테스트',50,2)
3번 SELECT절 실행 : 학년 컬럼과 학년을 기준으로 그룹화된 그룹의 점수 컬럼의 평균을 집계한다.
	+ 평균 집계 함수인 AVG() 함수가 사용되었다.
> (1,60) (2,65)
4번 ORDER BY절 실행 : 학년 컬럼을 기준으로 오름차순(ASC)정렬을 진행한다.
	+ ORDER BY절을 사용하면 오름차순 정렬을 위해 ASC를 기입하지 않아도 기본으로 오름차순 정렬을 진행한다.
> (1,60) (2,65)
▷ 결과 : 출력한다.
　학년	평균점수
　1	60
　2	65


조인(JOIN) : 한개 이상의 릴레이션을 논리적으로 합치는 것
> Full Join : 튜플x튜플, 릴레이션 간 존재하는 모든 튜플을 조인
> Inner Join : 릴레이션 간 조건에 맞는 튜플을 조인
	동등이너조인(=, ==)과 비동등이너조인(!=)
> Outer Join : Inner Join + Join에 참여하지 않은 튜플을 출력한다.
	조인 위치에 따라 Left Outer Join, Right Outer Join
